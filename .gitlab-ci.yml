# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

stages:
  - check
  - build
  - test
  - deploy

.update-rust: &update-rust
  - rustup update
  - cargo update

.check-rust: &check-rust
  - rustc --version
  - cargo --version

default:
  before_script:
    - cd coin-market-cap
    - *check-rust

check-all:
  stage: check
  script:
    - cargo clippy -- -D warnings
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - Cargo.lock
      - target/

build-all:
  stage: build
  script:
    - cargo build --verbose
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - Cargo.lock
      - target/

test-all-mr:
  stage: test
  script:
    - cargo tarpaulin -v
  coverage: /\d+.\d+% coverage/
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - Cargo.lock
      - target/
  only:
    - merge_requests

test-all-main:
  stage: test
  script:
    - cargo tarpaulin -v
  coverage: /\d+.\d+% coverage/
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - Cargo.lock
      - target/
  only:
    - main

deploy-all:
  stage: deploy
  script:
    - cargo build --release --verbose
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - Cargo.lock
      - target/
  artifacts:
    paths:
      - ../target/release/coin-market-cap*

  only:
    - main
